{
  "src/App.jsx": "Updated App.jsx to integrate the AdminPanel component and DataProvider for complete data management. The component now includes the admin panel for backend management and uses the DataProvider context for centralized data management. It maintains all existing functionality while adding comprehensive admin capabilities for managing profiles, categories, cities, and metadata. Keywords: ['app', 'routing', 'admin-integration', 'data-provider', 'main-component']. component_type: ['layout']. functionality: ['Main application component that integrates admin panel and data management with existing dating website functionality.']. use_case: ['Application entry point', 'Admin access', 'Data management integration']. related_files: ['src/components/AdminPanel.jsx', 'src/components/DataManager.jsx']",
  "src/components/Header.jsx": "This is the header navigation component that provides the main navigation bar for the dating website. It includes the site logo, navigation menu items, and responsive mobile menu functionality. The header is sticky and includes smooth animations for better user experience. It handles navigation between different sections like browsing profiles and swiping interface. Keywords: ['header', 'navigation', 'responsive', 'menu', 'routing']. component_type: ['UI']. functionality: ['Navigation header with responsive menu and routing']. use_case: ['Website navigation', 'Mobile responsive menu']. related_files: ['src/App.jsx', 'src/components/ProfileGrid.jsx']",
  "src/components/FilterSidebar.jsx": "This component provides a filtering sidebar that allows users to filter dating profiles by various criteria including cities, categories, and age ranges. It supports 30 Quebec cities and multiple dating categories. The sidebar is responsive and can be toggled on mobile devices. It includes interactive filter controls with visual feedback and the ability to clear all filters. Keywords: ['filter', 'sidebar', 'cities', 'categories', 'responsive']. component_type: ['UI']. functionality: ['Profile filtering interface with multiple criteria']. use_case: ['Profile search and filtering', 'Location-based filtering']. related_files: ['src/App.jsx', 'src/components/ProfileGrid.jsx']",
  "src/components/ProfileGrid.jsx": "Ce composant affiche la grille des profils de femmes à Québec dans un layout responsive. Il gère l'affichage des cartes de profils, les modales pour voir les détails et ajouter de nouveaux profils. Le composant inclut également la logique pour gérer les états vides et les animations. Keywords: ['profiles', 'grid', 'Quebec', 'women', 'modal', 'responsive']. component_type: ['UI']. functionality: ['Displays dating profiles in a responsive grid layout with modal interactions for Quebec women']. use_case: ['Profile browsing interface', 'Profile management dashboard']. related_files: ['src/components/ProfileCard.jsx', 'src/components/ProfileModal.jsx', 'src/components/AddProfileModal.jsx']",
  "src/components/ProfileCard.jsx": "Ce composant représente une carte individuelle de profil de femme dans la grille. Il affiche les informations essentielles comme la photo, le nom, l'âge, la ville (Québec), la catégorie et un aperçu de la bio. La carte inclut des boutons d'action pour modifier et supprimer, avec des animations au survol. Keywords: ['profile card', 'Quebec', 'women', 'responsive', 'animations']. component_type: ['UI']. functionality: ['Displays individual woman profile information in a card format with action buttons']. use_case: ['Profile display component', 'Grid item for profile browsing']. related_files: ['src/components/ProfileGrid.jsx', 'src/components/ProfileModal.jsx']",
  "src/components/ProfileModal.jsx": "This component displays detailed profile information in a modal dialog. It allows viewing and editing profile details including personal information, bio, interests, and profile images. The modal supports inline editing functionality and integrates with affiliate links for messaging features. It provides a comprehensive interface for profile management with form validation and responsive design. Keywords: ['modal', 'profile', 'editing', 'form', 'affiliate']. component_type: ['UI']. functionality: ['Profile detail view and editing interface']. use_case: ['Profile management', 'User profile editing', 'Detailed profile viewing']. related_files: ['src/components/ProfileGrid.jsx', 'src/components/AddProfileModal.jsx']",
  "src/components/AddProfileModal.jsx": "This component provides a modal interface for adding new dating profiles to the website. It includes a comprehensive form with fields for personal information, bio, interests, location, and profile image selection. The modal supports form validation, image selection from predefined options, and integrates with the main profile management system. It's designed for administrative use to add fake profiles for the dating website. Keywords: ['modal', 'form', 'profile creation', 'validation', 'admin']. component_type: ['UI']. functionality: ['Profile creation form with validation and image selection']. use_case: ['Adding new profiles', 'Administrative profile management', 'Fake profile creation']. related_files: ['src/components/ProfileGrid.jsx', 'src/components/ProfileModal.jsx']",
  "src/components/SwipeableProfiles.jsx": "This component provides a Tinder-like swiping interface for browsing dating profiles. Users can swipe left to pass or right to like profiles, with smooth animations and visual feedback. When users swipe right or click the like button, they are redirected to an affiliate link. The component displays profile information including photos, bio, age, location, and interests in an engaging card format. Keywords: ['swipe', 'tinder', 'dating', 'animation', 'affiliate']. component_type: ['UI']. functionality: ['Swipeable profile cards with affiliate link integration']. use_case: ['Profile browsing', 'Dating app interface', 'Affiliate marketing']. related_files: ['src/App.jsx', 'src/components/ProfileCard.jsx']",
  "src/components/AdminPanel.jsx": "This AdminPanel component provides a comprehensive backend management interface for the dating website. It includes password-protected access with admin authentication, allowing management of profiles, categories, cities, and site metadata. The component features CRUD operations for all data types, with modals for editing profiles and forms for adding new items. It uses local state management to simulate backend functionality, providing tabs for different management sections including profile management with detailed editing capabilities, category and city management with add/delete functions, and metadata management for SEO settings. Keywords: ['admin', 'management', 'authentication', 'CRUD', 'profiles', 'categories', 'cities', 'metadata', 'backend', 'dashboard']. component_type: ['functional']. functionality: ['Provides a complete admin dashboard for managing all aspects of the dating website including profiles, categories, cities and metadata with password protection.']. use_case: ['Website administration', 'Content management', 'Profile editing', 'SEO management']. related_files: ['src/App.jsx', 'src/components/ProfileGrid.jsx']",
  "src/components/DataManager.jsx": "This file serves as the central data management system for the dating website application. It provides a React Context API-based solution for managing all application data including user profiles, categories, cities, and website metadata. The DataManager acts as a centralized state management system that allows components throughout the application to access and modify shared data without prop drilling. It includes initial mock data for profiles with detailed French descriptions, Quebec cities, dating categories, and SEO metadata. The component uses React hooks (useState, useContext, createContext) to provide a clean interface for data operations across the entire application. Keywords: ['data management', 'React Context', 'state management', 'profiles', 'Quebec cities', 'dating categories', 'metadata', 'mock data']."
}